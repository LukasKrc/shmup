/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 13:48:05 GMT 2016
 */

package lt.Shmup.Main.Input.MouseInputHandlers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.MouseEvent;
import lt.Shmup.Main.Command.Command;
import lt.Shmup.Main.Command.CommandDispatchers.MouseCommandDispatcher;
import lt.Shmup.Main.Command.CommandDispatchers.MouseCommandDispatchers.DefaultMouseCommandDispatcher;
import lt.Shmup.Main.Command.CommandStore;
import lt.Shmup.Main.Command.CommandStores.HashMapCommandStore;
import lt.Shmup.Main.GameObject.Components.State.Position;
import lt.Shmup.Main.GameObject.Components.State.Volume;
import lt.Shmup.Main.GameObject.Components.Updateables.Health.Health;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Objects.Entities.ButtonEntity;
import lt.Shmup.Main.GameObject.Objects.Entity;
import lt.Shmup.Main.GameObject.Objects.Identifier;
import lt.Shmup.Main.GameObject.Renderable;
import lt.Shmup.Main.GameObject.Updateable;
import lt.Shmup.Main.Input.Commands.Mouse.ButtonClickCommand;
import lt.Shmup.Main.Input.Commands.Mouse.ButtonHoverCommand;
import lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler;
import lt.Shmup.Main.MouseCommand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultMouseInputHandler_ESTest extends DefaultMouseInputHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mouseReleased((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mouseMoved((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mouseExited((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      ButtonHoverCommand buttonHoverCommand0 = new ButtonHoverCommand((ButtonEntity) null);
      defaultMouseInputHandler0.addCommand((-2613), buttonHoverCommand0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) null);
      // Undeclared exception!
      try { 
        defaultMouseInputHandler0.mouseEntered((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) null);
      // Undeclared exception!
      try { 
        defaultMouseInputHandler0.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) null);
      // Undeclared exception!
      try { 
        defaultMouseInputHandler0.mouseExited((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mouseDragged((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) null);
      // Undeclared exception!
      try { 
        defaultMouseInputHandler0.mouseReleased((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) null);
      // Undeclared exception!
      try { 
        defaultMouseInputHandler0.mouseMoved((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mouseEntered((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mousePressed((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMapCommandStore<MouseCommand> hashMapCommandStore0 = new HashMapCommandStore<MouseCommand>();
      DefaultMouseCommandDispatcher defaultMouseCommandDispatcher0 = new DefaultMouseCommandDispatcher((CommandStore<MouseCommand>) hashMapCommandStore0);
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) defaultMouseCommandDispatcher0);
      defaultMouseInputHandler0.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultMouseInputHandler defaultMouseInputHandler0 = new DefaultMouseInputHandler((MouseCommandDispatcher) null);
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity((-1244), identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      ButtonClickCommand buttonClickCommand0 = new ButtonClickCommand(entity0, (Command) null);
      // Undeclared exception!
      try { 
        defaultMouseInputHandler0.addCommand((-1244), buttonClickCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.Input.MouseInputHandlers.DefaultMouseInputHandler", e);
      }
  }
}
