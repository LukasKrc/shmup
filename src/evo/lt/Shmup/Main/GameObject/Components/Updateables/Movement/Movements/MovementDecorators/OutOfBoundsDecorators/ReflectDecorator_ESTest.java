/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 14:08:43 GMT 2016
 */

package lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.OutOfBoundsDecorators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.LinearMovement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.Components.OutOfBoundsChecker;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.Components.OutOfBoundsCheckers.DefaultOutOfBoundsChecker;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.OutOfBoundsDecorators.ReflectDecorator;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.NullMovement;
import lt.Shmup.Main.GameObject.Objects.Entity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReflectDecorator_ESTest extends ReflectDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      ReflectDecorator reflectDecorator0 = new ReflectDecorator((Movement) nullMovement0, (OutOfBoundsChecker) null);
      ReflectDecorator reflectDecorator1 = (ReflectDecorator)reflectDecorator0.clone();
      assertFalse(reflectDecorator1.equals((Object)reflectDecorator0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(1840.79F, 1840.79F);
      DefaultOutOfBoundsChecker defaultOutOfBoundsChecker0 = new DefaultOutOfBoundsChecker();
      ReflectDecorator reflectDecorator0 = new ReflectDecorator((Movement) linearMovement0, (OutOfBoundsChecker) defaultOutOfBoundsChecker0);
      ReflectDecorator reflectDecorator1 = (ReflectDecorator)reflectDecorator0.clone();
      assertFalse(reflectDecorator1.equals((Object)reflectDecorator0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement((-1548.2F), (-1548.2F));
      DefaultOutOfBoundsChecker defaultOutOfBoundsChecker0 = new DefaultOutOfBoundsChecker();
      ReflectDecorator reflectDecorator0 = new ReflectDecorator((Movement) linearMovement0, (OutOfBoundsChecker) defaultOutOfBoundsChecker0);
      ReflectDecorator reflectDecorator1 = (ReflectDecorator)reflectDecorator0.clone();
      assertFalse(reflectDecorator1.equals((Object)reflectDecorator0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      ReflectDecorator reflectDecorator0 = new ReflectDecorator((Movement) nullMovement0, (OutOfBoundsChecker) null);
      reflectDecorator0.decorate((Entity) null);
      assertFalse(reflectDecorator0.isYTouchingBound());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultOutOfBoundsChecker defaultOutOfBoundsChecker0 = new DefaultOutOfBoundsChecker();
      ReflectDecorator reflectDecorator0 = new ReflectDecorator((Movement) null, (OutOfBoundsChecker) defaultOutOfBoundsChecker0);
      // Undeclared exception!
      try { 
        reflectDecorator0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.OutOfBoundsDecorators.ReflectDecorator", e);
      }
  }
}
