/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 14:29:30 GMT 2016
 */

package lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements;

import org.junit.Test;
import static org.junit.Assert.*;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.NullMovement;
import lt.Shmup.Main.GameObject.Objects.Entity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullMovement_ESTest extends NullMovement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.setSpeedY(400.7F);
      NullMovement nullMovement1 = (NullMovement)nullMovement0.clone();
      assertEquals(400.7F, nullMovement1.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.setSpeedY((-1.0F));
      NullMovement nullMovement1 = (NullMovement)nullMovement0.clone();
      assertSame(nullMovement1, nullMovement0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.setSpeedX(400.7F);
      NullMovement nullMovement1 = (NullMovement)nullMovement0.clone();
      assertEquals(0.0F, nullMovement1.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.setSpeedX((-2655.4692F));
      NullMovement nullMovement1 = (NullMovement)nullMovement0.clone();
      assertSame(nullMovement1, nullMovement0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.update((Entity) null);
      assertEquals(0.0F, nullMovement0.getSpeedY(), 0.01F);
  }
}
