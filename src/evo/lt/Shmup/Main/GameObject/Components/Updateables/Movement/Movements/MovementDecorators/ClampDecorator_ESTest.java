/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 14:07:17 GMT 2016
 */

package lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lt.Shmup.Main.GameObject.Components.State.Position;
import lt.Shmup.Main.GameObject.Components.State.Volume;
import lt.Shmup.Main.GameObject.Components.Updateables.Health.Health;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.LinearMovement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.ClampDecorator;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.NullMovement;
import lt.Shmup.Main.GameObject.Objects.Entity;
import lt.Shmup.Main.GameObject.Objects.Identifier;
import lt.Shmup.Main.GameObject.Renderable;
import lt.Shmup.Main.GameObject.Updateable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClampDecorator_ESTest extends ClampDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.setSpeedY(1408.956F);
      ClampDecorator clampDecorator0 = new ClampDecorator((Movement) nullMovement0);
      ClampDecorator clampDecorator1 = (ClampDecorator)clampDecorator0.clone();
      assertEquals(1408.956F, clampDecorator1.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      ClampDecorator clampDecorator0 = new ClampDecorator((Movement) nullMovement0);
      ClampDecorator clampDecorator1 = (ClampDecorator)clampDecorator0.clone();
      assertEquals(0.0F, clampDecorator1.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      nullMovement0.setSpeedX(3115.3289F);
      ClampDecorator clampDecorator0 = new ClampDecorator((Movement) nullMovement0);
      ClampDecorator clampDecorator1 = (ClampDecorator)clampDecorator0.clone();
      assertNotSame(clampDecorator0, clampDecorator1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement((-4353.8545F), (-4353.8545F));
      ClampDecorator clampDecorator0 = new ClampDecorator((Movement) linearMovement0);
      ClampDecorator clampDecorator1 = (ClampDecorator)clampDecorator0.clone();
      assertNotSame(clampDecorator0, clampDecorator1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClampDecorator clampDecorator0 = new ClampDecorator((Movement) null);
      // Undeclared exception!
      try { 
        clampDecorator0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.ClampDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullMovement nullMovement0 = new NullMovement();
      ClampDecorator clampDecorator0 = new ClampDecorator((Movement) nullMovement0);
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(12, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) clampDecorator0, (Updateable) null, (Renderable) null, true);
      // Undeclared exception!
      try { 
        clampDecorator0.update(entity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.ClampDecorator", e);
      }
  }
}
