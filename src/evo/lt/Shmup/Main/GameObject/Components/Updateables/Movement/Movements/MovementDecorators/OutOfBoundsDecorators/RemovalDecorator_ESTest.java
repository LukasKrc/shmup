/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 13:51:00 GMT 2016
 */

package lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.OutOfBoundsDecorators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.Components.OutOfBoundsChecker;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.OutOfBoundsDecorators.RemovalDecorator;
import lt.Shmup.Main.GameObject.ObjectHandler;
import lt.Shmup.Main.GameObject.Objects.Entity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RemovalDecorator_ESTest extends RemovalDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RemovalDecorator removalDecorator0 = new RemovalDecorator((Movement) null, (OutOfBoundsChecker) null, (ObjectHandler) null);
      removalDecorator0.decorate((Entity) null);
      assertFalse(removalDecorator0.isxOutOfBounds());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RemovalDecorator removalDecorator0 = new RemovalDecorator((Movement) null, (OutOfBoundsChecker) null, (ObjectHandler) null);
      // Undeclared exception!
      try { 
        removalDecorator0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.MovementDecorators.OutOfBoundsDecorators.RemovalDecorator", e);
      }
  }
}
