/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 13:47:05 GMT 2016
 */

package lt.Shmup.Main.GameObject.Components.Updateables.Movement;

import org.junit.Test;
import static org.junit.Assert.*;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.LinearMovement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Movement_ESTest extends Movement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 0.0F);
      float float0 = linearMovement0.getSpeedY();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement((-1078.169F), (-366.98F));
      float float0 = linearMovement0.getSpeedY();
      assertEquals((-366.98F), float0, 0.01F);
      assertEquals((-1078.169F), linearMovement0.getSpeedX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 0.0F);
      float float0 = linearMovement0.getSpeedX();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement((-3232.7F), 0.0F);
      float float0 = linearMovement0.getSpeedX();
      assertEquals((-3232.7F), float0, 0.01F);
      assertEquals(0.0F, linearMovement0.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 0.0F);
      LinearMovement linearMovement1 = (LinearMovement)linearMovement0.clone();
      assertFalse(linearMovement1.equals((Object)linearMovement0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(1769.2F, 1.0F);
      linearMovement0.clone();
      assertEquals(1769.2F, linearMovement0.getSpeedX(), 0.01F);
      assertEquals(1.0F, linearMovement0.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement((-1078.169F), (-366.98F));
      linearMovement0.clone();
      assertEquals((-366.98F), linearMovement0.getSpeedY(), 0.01F);
      assertEquals((-1078.169F), linearMovement0.getSpeedX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 6.2831855F);
      assertEquals(0.0F, linearMovement0.getSpeedX(), 0.01F);
      
      linearMovement0.setSpeedX(6.2831855F);
      assertEquals(6.2831855F, linearMovement0.getSpeedX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 6.2831855F);
      assertEquals(6.2831855F, linearMovement0.getSpeedY(), 0.01F);
      
      linearMovement0.setSpeedY(0.0F);
      assertEquals(0.0F, linearMovement0.getSpeedX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 6.2831855F);
      float float0 = linearMovement0.getSpeedY();
      assertEquals(6.2831855F, float0, 0.01F);
      assertEquals(0.0F, linearMovement0.getSpeedX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(1.0F, 1.0F);
      float float0 = linearMovement0.getSpeedX();
      assertEquals(1.0F, linearMovement0.getSpeedY(), 0.01F);
      assertEquals(1.0F, float0, 0.01F);
  }
}
