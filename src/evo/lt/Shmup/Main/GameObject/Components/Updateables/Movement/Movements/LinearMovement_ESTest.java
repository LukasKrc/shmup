/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 14:26:34 GMT 2016
 */

package lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lt.Shmup.Main.GameObject.Components.State.Position;
import lt.Shmup.Main.GameObject.Components.State.Volume;
import lt.Shmup.Main.GameObject.Components.Updateables.Health.Health;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.LinearMovement;
import lt.Shmup.Main.GameObject.Objects.Entity;
import lt.Shmup.Main.GameObject.Objects.Identifier;
import lt.Shmup.Main.GameObject.Renderable;
import lt.Shmup.Main.GameObject.Updateable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LinearMovement_ESTest extends LinearMovement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(0.0F, 0.0F);
      LinearMovement linearMovement1 = (LinearMovement)linearMovement0.clone();
      assertFalse(linearMovement1.equals((Object)linearMovement0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement((float) (-39), (float) (-39));
      LinearMovement linearMovement1 = (LinearMovement)linearMovement0.clone();
      assertEquals((-39.0F), linearMovement1.getSpeedY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Identifier identifier0 = Identifier.EnemyProjectile;
      LinearMovement linearMovement0 = new LinearMovement((float) (-39), (float) (-39));
      Entity entity0 = new Entity((-39), identifier0, (Position) null, (Volume) null, (Health) null, (Movement) linearMovement0, (Updateable) null, (Renderable) null, true);
      // Undeclared exception!
      try { 
        linearMovement0.update(entity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.LinearMovement", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinearMovement linearMovement0 = new LinearMovement(205.6055F, 205.6055F);
      LinearMovement linearMovement1 = (LinearMovement)linearMovement0.clone();
      assertNotSame(linearMovement0, linearMovement1);
  }
}
