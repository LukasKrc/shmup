/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 14:21:11 GMT 2016
 */

package lt.Shmup.Main.GameObject.Objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.util.HashMap;
import java.util.LinkedList;
import lt.Shmup.Main.GameObject.Components.State.Position;
import lt.Shmup.Main.GameObject.Components.State.Volume;
import lt.Shmup.Main.GameObject.Components.Updateables.Health.Health;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.ObjectHandler;
import lt.Shmup.Main.GameObject.Objects.Components.EntityObserver;
import lt.Shmup.Main.GameObject.Objects.Entity;
import lt.Shmup.Main.GameObject.Objects.Identifier;
import lt.Shmup.Main.GameObject.Renderable;
import lt.Shmup.Main.GameObject.Updateable;
import lt.Shmup.Main.GameObject.Visitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entity_ESTest extends Entity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Identifier identifier0 = Identifier.Player;
      Entity entity0 = new Entity(7, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      boolean boolean0 = entity0.isCollidable();
      assertTrue(boolean0);
      assertEquals(7, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false, (LinkedList<EntityObserver>) null);
      entity0.getObservers();
      assertFalse(entity0.isCollidable());
      assertEquals(0, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2300, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      int int0 = entity0.getLayerIndex();
      assertEquals(2300, int0);
      assertTrue(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity((-587), identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      int int0 = entity0.getLayerIndex();
      assertEquals((-587), int0);
      assertTrue(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setIdentifier((Identifier) null);
      entity0.getIdentifier();
      assertEquals(2042, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2757, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      Identifier identifier1 = Identifier.Player;
      entity0.setIdentifier(identifier1);
      entity0.getIdentifier();
      assertEquals(2757, entity0.getLayerIndex());
      assertTrue(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Identifier identifier0 = Identifier.Player;
      Entity entity0 = new Entity(1297, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true, (LinkedList<EntityObserver>) null);
      // Undeclared exception!
      try { 
        entity0.attachObserver((EntityObserver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entity", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      int int0 = entity0.getLayerIndex();
      assertFalse(entity0.isCollidable());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Identifier identifier0 = Identifier.EnemyProjectile;
      Entity entity0 = new Entity((-732), identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      entity0.attachObserver((EntityObserver) null);
      // Undeclared exception!
      try { 
        entity0.notifyObservers("\"A 5kP$NNY(s]=", (HashMap<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entity", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2757, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      entity0.notifyObservers("", (HashMap<String, String>) null);
      assertTrue(entity0.isCollidable());
      assertEquals(2757, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(257, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      entity0.getHealth();
      assertEquals(257, entity0.getLayerIndex());
      assertTrue(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Identifier identifier0 = Identifier.PlayerProjectile;
      Entity entity0 = new Entity(5, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      // Undeclared exception!
      try { 
        entity0.getBounds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entity", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.getBehaviour();
      assertFalse(entity0.isCollidable());
      assertEquals(2042, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Identifier identifier0 = Identifier.PlayerProjectile;
      Entity entity0 = new Entity(768, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setRenderable((Renderable) null);
      assertEquals(768, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Identifier identifier0 = Identifier.PlayerProjectile;
      Entity entity0 = new Entity(768, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setBehaviour((Updateable) null);
      assertEquals(768, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setObjectHandler((ObjectHandler) null);
      assertEquals(2042, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Identifier identifier0 = Identifier.PlayerProjectile;
      Entity entity0 = new Entity(768, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      boolean boolean0 = entity0.isCollidable();
      assertEquals(768, entity0.getLayerIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2757, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      entity0.getRenderable();
      assertEquals(2757, entity0.getLayerIndex());
      assertTrue(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.getIdentifier();
      assertEquals(2042, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.getObjectHandler();
      assertFalse(entity0.isCollidable());
      assertEquals(2042, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.getMovement();
      assertFalse(entity0.isCollidable());
      assertEquals(0, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(257, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      // Undeclared exception!
      try { 
        entity0.acceptRenderVisitor((Visitor) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entity", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      // Undeclared exception!
      try { 
        entity0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entity", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.attachObserver((EntityObserver) null);
      entity0.getObservers();
      assertEquals(0, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setVolume((Volume) null);
      assertFalse(entity0.isCollidable());
      assertEquals(2042, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Identifier identifier0 = Identifier.Player;
      Entity entity0 = new Entity(7, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      entity0.getPosition();
      assertTrue(entity0.isCollidable());
      assertEquals(7, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      // Undeclared exception!
      try { 
        entity0.acceptUpdateVisitor((Visitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entity", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setHealth((Health) null);
      assertFalse(entity0.isCollidable());
      assertEquals(2042, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      LinkedList<EntityObserver> linkedList0 = entity0.getObservers();
      Entity entity1 = new Entity(2042, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false, linkedList0);
      assertFalse(entity0.isCollidable());
      assertEquals(2042, entity0.getLayerIndex());
      assertFalse(entity1.isCollidable());
      assertEquals(2042, entity1.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setPosition((Position) null);
      assertFalse(entity0.isCollidable());
      assertEquals(0, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Identifier identifier0 = Identifier.Unidentified;
      Entity entity0 = new Entity(118, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false);
      entity0.setMovement((Movement) null);
      assertEquals(118, entity0.getLayerIndex());
      assertFalse(entity0.isCollidable());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      Entity entity0 = new Entity(2757, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true);
      entity0.getVolume();
      assertEquals(2757, entity0.getLayerIndex());
      assertTrue(entity0.isCollidable());
  }
}
