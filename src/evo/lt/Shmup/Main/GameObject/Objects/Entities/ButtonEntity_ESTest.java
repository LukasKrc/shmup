/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 14:21:54 GMT 2016
 */

package lt.Shmup.Main.GameObject.Objects.Entities;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.util.HashMap;
import java.util.LinkedList;
import lt.Shmup.Main.GameObject.Components.State.Position;
import lt.Shmup.Main.GameObject.Components.State.Volume;
import lt.Shmup.Main.GameObject.Components.Updateables.Health.Health;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Objects.Components.EntityObserver;
import lt.Shmup.Main.GameObject.Objects.Entities.ButtonEntity;
import lt.Shmup.Main.GameObject.Objects.Entities.ButtonState;
import lt.Shmup.Main.GameObject.Objects.Identifier;
import lt.Shmup.Main.GameObject.Renderable;
import lt.Shmup.Main.GameObject.Updateable;
import lt.Shmup.Main.GameObject.Visitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ButtonEntity_ESTest extends ButtonEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Identifier identifier0 = Identifier.Player;
      ButtonEntity buttonEntity0 = new ButtonEntity(1, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true, (LinkedList<EntityObserver>) null, "", (Font) null, (Color) null, (HashMap<ButtonState, Color>) null);
      ButtonState buttonState0 = ButtonState.Depressed;
      buttonEntity0.setState(buttonState0);
      ButtonState buttonState1 = buttonEntity0.getState();
      assertEquals("Depressed", buttonState1.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Identifier identifier0 = Identifier.EnemyProjectile;
      ButtonEntity buttonEntity0 = new ButtonEntity(0, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false, (LinkedList<EntityObserver>) null, "%KR4=9c[}T3", (Font) null, (Color) null, (HashMap<ButtonState, Color>) null);
      HashMap<ButtonState, Color> hashMap0 = buttonEntity0.getButtonStateColors();
      assertNull(hashMap0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      ButtonEntity buttonEntity0 = new ButtonEntity(387, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false, (LinkedList<EntityObserver>) null, (String) null, (Font) null, (Color) null, (HashMap<ButtonState, Color>) null);
      ButtonState buttonState0 = ButtonState.Hovered;
      buttonEntity0.setState(buttonState0);
      ButtonState buttonState1 = buttonEntity0.getState();
      assertEquals("Hovered", buttonState1.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Identifier identifier0 = Identifier.Player;
      ButtonEntity buttonEntity0 = new ButtonEntity(1, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, true, (LinkedList<EntityObserver>) null, "", (Font) null, (Color) null, (HashMap<ButtonState, Color>) null);
      // Undeclared exception!
      try { 
        buttonEntity0.acceptRenderVisitor((Visitor) null, (Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("lt.Shmup.Main.GameObject.Objects.Entities.ButtonEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Identifier identifier0 = Identifier.Enemy;
      ButtonEntity buttonEntity0 = new ButtonEntity(387, identifier0, (Position) null, (Volume) null, (Health) null, (Movement) null, (Updateable) null, (Renderable) null, false, (LinkedList<EntityObserver>) null, (String) null, (Font) null, (Color) null, (HashMap<ButtonState, Color>) null);
      buttonEntity0.getState();
  }
}
