/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 27 13:43:23 GMT 2016
 */

package lt.Shmup.Main.GameObject.Objects.Components.EntityObservers;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import lt.Shmup.Main.GameObject.Components.Renderables.NullRenderable;
import lt.Shmup.Main.GameObject.Components.State.Position;
import lt.Shmup.Main.GameObject.Components.State.Positions.BasicPosition;
import lt.Shmup.Main.GameObject.Components.State.Volume;
import lt.Shmup.Main.GameObject.Components.State.Volumes.BasicVolume;
import lt.Shmup.Main.GameObject.Components.Updateables.Health.Health;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movement;
import lt.Shmup.Main.GameObject.Components.Updateables.Movement.Movements.NullMovement;
import lt.Shmup.Main.GameObject.Objects.Components.EntityObservers.DamageTakenObserver;
import lt.Shmup.Main.GameObject.Objects.Entity;
import lt.Shmup.Main.GameObject.Objects.Identifier;
import lt.Shmup.Main.GameObject.Renderable;
import lt.Shmup.Main.GameObject.Updateable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DamageTakenObserver_ESTest extends DamageTakenObserver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DamageTakenObserver damageTakenObserver0 = new DamageTakenObserver();
      Identifier identifier0 = Identifier.Player;
      BasicPosition basicPosition0 = new BasicPosition((float) 3119, (float) 3119);
      BasicVolume basicVolume0 = new BasicVolume((float) 3119, (-1286.9198F));
      NullMovement nullMovement0 = new NullMovement();
      NullRenderable nullRenderable0 = new NullRenderable();
      Entity entity0 = new Entity(3119, identifier0, (Position) basicPosition0, (Volume) basicVolume0, (Health) null, (Movement) nullMovement0, (Updateable) nullMovement0, (Renderable) nullRenderable0, true);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      damageTakenObserver0.notify(entity0, "damage_taken", hashMap0);
      assertEquals(3119, entity0.getLayerIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DamageTakenObserver damageTakenObserver0 = new DamageTakenObserver();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      damageTakenObserver0.notify((Entity) null, "C1", hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DamageTakenObserver damageTakenObserver0 = new DamageTakenObserver();
      DamageTakenObserver damageTakenObserver1 = (DamageTakenObserver)damageTakenObserver0.clone();
      assertNotSame(damageTakenObserver0, damageTakenObserver1);
  }
}
